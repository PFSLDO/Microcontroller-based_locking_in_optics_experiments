#include "lcd.h"
#include "stm32l4xx_hal.h"
#include "string.h"
#include "main.h"

static void LCD_EnablePulse(void);
static void LCD_Send4Bits(uint8_t data);

void LCD_Init(void)
{
    HAL_Delay(50); // tempo de inicialização
    LCD_SendCommand(0x33);
    LCD_SendCommand(0x32); // modo 4 bits
    LCD_SendCommand(0x28); // 2 linhas, 5x7 font
    LCD_SendCommand(0x0C); // display on, cursor off
    LCD_SendCommand(0x06); // incrementar cursor
    LCD_SendCommand(0x01); // clear display
    HAL_Delay(2);
}

void LCD_SendCommand(uint8_t cmd)
{
    HAL_GPIO_WritePin(LCD_RS_GPIO_Port, LCD_RS_Pin, GPIO_PIN_RESET);
    LCD_Send4Bits(cmd >> 4);
    LCD_Send4Bits(cmd & 0x0F);
    HAL_Delay(2);
}

void LCD_SendData(uint8_t data)
{
    HAL_GPIO_WritePin(LCD_RS_GPIO_Port, LCD_RS_Pin, GPIO_PIN_SET);
    LCD_Send4Bits(data >> 4);
    LCD_Send4Bits(data & 0x0F);
    HAL_Delay(2);
}

void LCD_SendString(char *str)
{
    while (*str) {
        LCD_SendData(*str++);
    }
}

void LCD_SetCursor(uint8_t row, uint8_t col)
{
    uint8_t pos[] = {0x00, 0x40};
    LCD_SendCommand(0x80 | (pos[row] + col));
}

static void LCD_Send4Bits(uint8_t data)
{
    HAL_GPIO_WritePin(LCD_D4_GPIO_Port, LCD_D4_Pin, (data >> 0) & 0x01);
    HAL_GPIO_WritePin(LCD_D5_GPIO_Port, LCD_D5_Pin, (data >> 1) & 0x01);
    HAL_GPIO_WritePin(LCD_D6_GPIO_Port, LCD_D6_Pin, (data >> 2) & 0x01);
    HAL_GPIO_WritePin(LCD_D7_GPIO_Port, LCD_D7_Pin, (data >> 3) & 0x01);
    LCD_EnablePulse();
}

static void LCD_EnablePulse(void)
{
    HAL_GPIO_WritePin(LCD_EN_GPIO_Port, LCD_EN_Pin, GPIO_PIN_SET);
    HAL_Delay(1);
    HAL_GPIO_WritePin(LCD_EN_GPIO_Port, LCD_EN_Pin, GPIO_PIN_RESET);
    HAL_Delay(1);
}
