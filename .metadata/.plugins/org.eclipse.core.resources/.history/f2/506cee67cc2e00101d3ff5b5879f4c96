/* USER CODE BEGIN Header */
/**
  ******************************************************************************
  * @file           : main.h
  * @brief          : Header for main.c file.
  *                   This file contains the common defines of the application.
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2025 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
  */
/* USER CODE END Header */

/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef __MAIN_H
#define __MAIN_H

#ifdef __cplusplus
extern "C" {
#endif

/* Includes ------------------------------------------------------------------*/
#include "stm32l4xx_hal.h"

/* Private includes ----------------------------------------------------------*/
/* USER CODE BEGIN Includes */

/* USER CODE END Includes */

/* Exported types ------------------------------------------------------------*/
/* USER CODE BEGIN ET */

/* USER CODE END ET */

/* Exported constants --------------------------------------------------------*/
/* USER CODE BEGIN EC */

/* USER CODE END EC */

/* Exported macro ------------------------------------------------------------*/
/* USER CODE BEGIN EM */

/* USER CODE END EM */

/* Exported functions prototypes ---------------------------------------------*/
void Error_Handler(void);

/* USER CODE BEGIN EFP */
void lcd_init();
void lcd_clear();
void lcd_send_command(uint8_t cmd);
void lcd_send_data(uint8_t data);
void lcd_set_cursor(uint8_t row, uint8_t col);
void lcd_print(char *str);
/* USER CODE END EFP */

/* Private defines -----------------------------------------------------------*/

/* USER CODE BEGIN Private defines */
#define LCD_E_PORT       GPIOA
#define LCD_E_PIN        GPIO_PIN_2
#define LCD_RS_PORT      GPIOA
#define LCD_RS_PIN       GPIO_PIN_7
#define LCD_D4_PORT      GPIOA
#define LCD_D4_PIN       GPIO_PIN_6
#define LCD_D5_PORT      GPIOA
#define LCD_D5_PIN       GPIO_PIN_5
#define LCD_D6_PORT      GPIOA
#define LCD_D6_PIN       GPIO_PIN_4
#define LCD_D7_PORT      GPIOA
#define LCD_D7_PIN       GPIO_PIN_3

// Comandos do LCD
#define LCD_CLEAR_DISPLAY       0x01
#define LCD_RETURN_HOME         0x02
#define LCD_ENTRY_MODE_SET      0x04
#define LCD_DISPLAY_CONTROL     0x08
#define LCD_CURSOR_SHIFT        0x10
#define LCD_FUNCTION_SET        0x20
#define LCD_SET_DDRAM_ADDR      0x80

// Configurações de display
#define LCD_ENTRY_RIGHT         0x00
#define LCD_ENTRY_LEFT          0x02
#define LCD_ENTRY_SHIFT_ON      0x01
#define LCD_ENTRY_SHIFT_OFF     0x00

#define LCD_DISPLAY_ON          0x04
#define LCD_DISPLAY_OFF         0x00
#define LCD_CURSOR_ON           0x02
#define LCD_CURSOR_OFF          0x00
#define LCD_BLINK_ON            0x01
#define LCD_BLINK_OFF           0x00

// Definição dos limites dos botões (ajuste conforme necessário)
#define RIGHT_THRESHOLD    50
#define UP_THRESHOLD       150
#define DOWN_THRESHOLD     300
#define LEFT_THRESHOLD     500
#define SELECT_THRESHOLD   750

typedef enum {
    BUTTON_NONE = 0,
    BUTTON_RIGHT,
    BUTTON_UP,
    BUTTON_DOWN,
    BUTTON_LEFT,
    BUTTON_SELECT
} ButtonState;
/* USER CODE END Private defines */

#ifdef __cplusplus
}
#endif

#endif /* __MAIN_H */
